This project uses XGBoost to determine whether TupleScore, derived from the Domingo et al. 2020 dataset, can be predictive of the fitness measurement described in that paper.  Unlike with the California Housing Price dataset, it is not clear whether specific choice of nucleotide bases in particular columns is predictive.  Domingo et al. study a particular RNA sequence of length 72, with 10 segregating sites and a native secondary structure used to inform the TupleScore model.  TupleScore is obtained as the sum of TupleScorei for i = 1,2,3,4,5.  TupleScore1 assigns a value in 0,1,2,3 depending on pair of bases observed in columns 1 and 71, namely 3 if it the pair consists of G and C, 2 if it consists of A and U, 1 if it consists of G and U, and 0 for any other pair.  The other four TupleScores are computed in the same way, but for different bases.  TupleScore2 is for 2 and 70.  TupleScore3 is for 3 and 69. TupleScore4 is for 6 and 66.  TupleScore5 is for 27 and 41.  The methodology used here is identical to that of https://github.com/blegried93/New-Projects/tree/main/CaliforniaRealEstate90.

Results:  I ran XGBoost (the regressor) on test_size values of 0.1, 0.5, 0.9 as with the California House Prices data set.  The results look quite different.  Test_size of 0.1 gives (mse,r^2) = (0.0131,0.4004).  Test_size of 0.5 gives (mse,r^2) = (0.0118,0.4143).  Test_size of 0.9 gives (mse,r^2) = (0.0138,0.2917).  First, the mse is low in all three cases, suggesting I am not overfitting by picking a test_size of 0.1 as with the California Housing Prices data set.  However, the r^2 is much lower for the test_size of 0.9, indicating that the bias is high.  As with many biological datasets, the calculation of TupleScore is probably not going to explain most of the difference in fitness values in the Domingo dataset.
